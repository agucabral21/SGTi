<?php

namespace SGTi\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class SGTiEntityMateriaProxy extends \SGTi\Entity\Materia implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setId($id)
    {
        $this->__load();
        return parent::setId($id);
    }

    public function getNombre()
    {
        $this->__load();
        return parent::getNombre();
    }

    public function setNombre($nombre)
    {
        $this->__load();
        return parent::setNombre($nombre);
    }

    public function getCreditos()
    {
        $this->__load();
        return parent::getCreditos();
    }

    public function setCreditos($creditos)
    {
        $this->__load();
        return parent::setCreditos($creditos);
    }

    public function getTipoAprobacion()
    {
        $this->__load();
        return parent::getTipoAprobacion();
    }

    public function setTipoAprobacion($tipoAprobacion)
    {
        $this->__load();
        return parent::setTipoAprobacion($tipoAprobacion);
    }

    public function getPeriodo()
    {
        $this->__load();
        return parent::getPeriodo();
    }

    public function setPeriodo($periodo)
    {
        $this->__load();
        return parent::setPeriodo($periodo);
    }

    public function getCursos()
    {
        $this->__load();
        return parent::getCursos();
    }

    public function setCursos($cursos)
    {
        $this->__load();
        return parent::setCursos($cursos);
    }

    public function getMateriales()
    {
        $this->__load();
        return parent::getMateriales();
    }

    public function setMateriales($materiales)
    {
        $this->__load();
        return parent::setMateriales($materiales);
    }

    public function getPreviaturas()
    {
        $this->__load();
        return parent::getPreviaturas();
    }

    public function setPreviaturas($previaturas)
    {
        $this->__load();
        return parent::setPreviaturas($previaturas);
    }

    public function getMateriaPadre()
    {
        $this->__load();
        return parent::getMateriaPadre();
    }

    public function setMateriaPadre($materiaPadre)
    {
        $this->__load();
        return parent::setMateriaPadre($materiaPadre);
    }

    public function agregarCurso($curso)
    {
        $this->__load();
        return parent::agregarCurso($curso);
    }

    public function agregarMaterial($material)
    {
        $this->__load();
        return parent::agregarMaterial($material);
    }

    public function agregarPreviatura($previatura)
    {
        $this->__load();
        return parent::agregarPreviatura($previatura);
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'nombre', 'creditos', 'tipoAprobacion', 'periodo', 'cursos', 'materiales', 'materiaPadre', 'previaturas');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}